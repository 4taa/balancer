version: '3'

services:
  nginx:
    container_name: nginx
    restart: always
    image: nginx
    volumes:
      - ./main.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'
    depends_on:
      - server-first
      - server-second
      - server-third
      - prometheus
      - grafana
    links:
      - server-third
      - server-second
      - server-first

  server-first:
    container_name: back-first
    restart: always
    command: node index.js -p 81 -m 810
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8010:81'
      - '8011:810'

  server-second:
    container_name: back-second
    restart: always
    command: node index.js -p 82 -m 820
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8020:82'
      - '8021:820'

  server-third:
    container_name: back-third
    restart: always
    command: node index.js -p 83 -m 830
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8030:83'
      - '8031:830'

  #  MONITORING
  prometheus:
    container_name: monitoring-prometheus
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '8009:9090'

  grafana:
    container_name: monitoring-grafana
    image: grafana/grafana
    restart: always
    ports:
      - '8008:3000'